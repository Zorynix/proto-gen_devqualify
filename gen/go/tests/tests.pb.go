// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: tests/tests.proto

package testsv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Direction int32

const (
	Direction_DIRECTION_UNSPECIFIED Direction = 0
	Direction_BACKEND               Direction = 1
	Direction_FRONTEND              Direction = 2
	Direction_DEVOPS                Direction = 3
	Direction_DATA_SCIENCE          Direction = 4
)

// Enum value maps for Direction.
var (
	Direction_name = map[int32]string{
		0: "DIRECTION_UNSPECIFIED",
		1: "BACKEND",
		2: "FRONTEND",
		3: "DEVOPS",
		4: "DATA_SCIENCE",
	}
	Direction_value = map[string]int32{
		"DIRECTION_UNSPECIFIED": 0,
		"BACKEND":               1,
		"FRONTEND":              2,
		"DEVOPS":                3,
		"DATA_SCIENCE":          4,
	}
)

func (x Direction) Enum() *Direction {
	p := new(Direction)
	*p = x
	return p
}

func (x Direction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Direction) Descriptor() protoreflect.EnumDescriptor {
	return file_tests_tests_proto_enumTypes[0].Descriptor()
}

func (Direction) Type() protoreflect.EnumType {
	return &file_tests_tests_proto_enumTypes[0]
}

func (x Direction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Direction.Descriptor instead.
func (Direction) EnumDescriptor() ([]byte, []int) {
	return file_tests_tests_proto_rawDescGZIP(), []int{0}
}

type Level int32

const (
	Level_LEVEL_UNSPECIFIED Level = 0
	Level_JUNIOR            Level = 1
	Level_MIDDLE            Level = 2
	Level_SENIOR            Level = 3
)

// Enum value maps for Level.
var (
	Level_name = map[int32]string{
		0: "LEVEL_UNSPECIFIED",
		1: "JUNIOR",
		2: "MIDDLE",
		3: "SENIOR",
	}
	Level_value = map[string]int32{
		"LEVEL_UNSPECIFIED": 0,
		"JUNIOR":            1,
		"MIDDLE":            2,
		"SENIOR":            3,
	}
)

func (x Level) Enum() *Level {
	p := new(Level)
	*p = x
	return p
}

func (x Level) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Level) Descriptor() protoreflect.EnumDescriptor {
	return file_tests_tests_proto_enumTypes[1].Descriptor()
}

func (Level) Type() protoreflect.EnumType {
	return &file_tests_tests_proto_enumTypes[1]
}

func (x Level) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Level.Descriptor instead.
func (Level) EnumDescriptor() ([]byte, []int) {
	return file_tests_tests_proto_rawDescGZIP(), []int{1}
}

type QuestionType int32

const (
	QuestionType_QUESTION_TYPE_UNSPECIFIED QuestionType = 0
	QuestionType_MCQ                       QuestionType = 1
	QuestionType_TEXT                      QuestionType = 2
	QuestionType_CODE                      QuestionType = 3
)

// Enum value maps for QuestionType.
var (
	QuestionType_name = map[int32]string{
		0: "QUESTION_TYPE_UNSPECIFIED",
		1: "MCQ",
		2: "TEXT",
		3: "CODE",
	}
	QuestionType_value = map[string]int32{
		"QUESTION_TYPE_UNSPECIFIED": 0,
		"MCQ":                       1,
		"TEXT":                      2,
		"CODE":                      3,
	}
)

func (x QuestionType) Enum() *QuestionType {
	p := new(QuestionType)
	*p = x
	return p
}

func (x QuestionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QuestionType) Descriptor() protoreflect.EnumDescriptor {
	return file_tests_tests_proto_enumTypes[2].Descriptor()
}

func (QuestionType) Type() protoreflect.EnumType {
	return &file_tests_tests_proto_enumTypes[2]
}

func (x QuestionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QuestionType.Descriptor instead.
func (QuestionType) EnumDescriptor() ([]byte, []int) {
	return file_tests_tests_proto_rawDescGZIP(), []int{2}
}

type Difficulty int32

const (
	Difficulty_DIFFICULTY_UNSPECIFIED Difficulty = 0
	Difficulty_EASY                   Difficulty = 1
	Difficulty_MEDIUM                 Difficulty = 2
	Difficulty_HARD                   Difficulty = 3
)

// Enum value maps for Difficulty.
var (
	Difficulty_name = map[int32]string{
		0: "DIFFICULTY_UNSPECIFIED",
		1: "EASY",
		2: "MEDIUM",
		3: "HARD",
	}
	Difficulty_value = map[string]int32{
		"DIFFICULTY_UNSPECIFIED": 0,
		"EASY":                   1,
		"MEDIUM":                 2,
		"HARD":                   3,
	}
)

func (x Difficulty) Enum() *Difficulty {
	p := new(Difficulty)
	*p = x
	return p
}

func (x Difficulty) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Difficulty) Descriptor() protoreflect.EnumDescriptor {
	return file_tests_tests_proto_enumTypes[3].Descriptor()
}

func (Difficulty) Type() protoreflect.EnumType {
	return &file_tests_tests_proto_enumTypes[3]
}

func (x Difficulty) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Difficulty.Descriptor instead.
func (Difficulty) EnumDescriptor() ([]byte, []int) {
	return file_tests_tests_proto_rawDescGZIP(), []int{3}
}

type Pagination struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PageSize      int32                  `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken     string                 `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Pagination) Reset() {
	*x = Pagination{}
	mi := &file_tests_tests_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Pagination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pagination) ProtoMessage() {}

func (x *Pagination) ProtoReflect() protoreflect.Message {
	mi := &file_tests_tests_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pagination.ProtoReflect.Descriptor instead.
func (*Pagination) Descriptor() ([]byte, []int) {
	return file_tests_tests_proto_rawDescGZIP(), []int{0}
}

func (x *Pagination) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *Pagination) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type TestInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Direction     Direction              `protobuf:"varint,4,opt,name=direction,proto3,enum=test.v1.Direction" json:"direction,omitempty"`
	Level         Level                  `protobuf:"varint,5,opt,name=level,proto3,enum=test.v1.Level" json:"level,omitempty"`
	Difficulty    Difficulty             `protobuf:"varint,6,opt,name=difficulty,proto3,enum=test.v1.Difficulty" json:"difficulty,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TestInfo) Reset() {
	*x = TestInfo{}
	mi := &file_tests_tests_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestInfo) ProtoMessage() {}

func (x *TestInfo) ProtoReflect() protoreflect.Message {
	mi := &file_tests_tests_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestInfo.ProtoReflect.Descriptor instead.
func (*TestInfo) Descriptor() ([]byte, []int) {
	return file_tests_tests_proto_rawDescGZIP(), []int{1}
}

func (x *TestInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TestInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *TestInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *TestInfo) GetDirection() Direction {
	if x != nil {
		return x.Direction
	}
	return Direction_DIRECTION_UNSPECIFIED
}

func (x *TestInfo) GetLevel() Level {
	if x != nil {
		return x.Level
	}
	return Level_LEVEL_UNSPECIFIED
}

func (x *TestInfo) GetDifficulty() Difficulty {
	if x != nil {
		return x.Difficulty
	}
	return Difficulty_DIFFICULTY_UNSPECIFIED
}

type CreateTestRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Title         string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Questions     []*Question            `protobuf:"bytes,3,rep,name=questions,proto3" json:"questions,omitempty"`
	Direction     Direction              `protobuf:"varint,4,opt,name=direction,proto3,enum=test.v1.Direction" json:"direction,omitempty"`
	Level         Level                  `protobuf:"varint,5,opt,name=level,proto3,enum=test.v1.Level" json:"level,omitempty"`
	Difficulty    Difficulty             `protobuf:"varint,6,opt,name=difficulty,proto3,enum=test.v1.Difficulty" json:"difficulty,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTestRequest) Reset() {
	*x = CreateTestRequest{}
	mi := &file_tests_tests_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTestRequest) ProtoMessage() {}

func (x *CreateTestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tests_tests_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTestRequest.ProtoReflect.Descriptor instead.
func (*CreateTestRequest) Descriptor() ([]byte, []int) {
	return file_tests_tests_proto_rawDescGZIP(), []int{2}
}

func (x *CreateTestRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateTestRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateTestRequest) GetQuestions() []*Question {
	if x != nil {
		return x.Questions
	}
	return nil
}

func (x *CreateTestRequest) GetDirection() Direction {
	if x != nil {
		return x.Direction
	}
	return Direction_DIRECTION_UNSPECIFIED
}

func (x *CreateTestRequest) GetLevel() Level {
	if x != nil {
		return x.Level
	}
	return Level_LEVEL_UNSPECIFIED
}

func (x *CreateTestRequest) GetDifficulty() Difficulty {
	if x != nil {
		return x.Difficulty
	}
	return Difficulty_DIFFICULTY_UNSPECIFIED
}

type Question struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Text          string                 `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	Type          QuestionType           `protobuf:"varint,3,opt,name=type,proto3,enum=test.v1.QuestionType" json:"type,omitempty"`
	Options       []string               `protobuf:"bytes,4,rep,name=options,proto3" json:"options,omitempty"`
	CorrectOption int32                  `protobuf:"varint,5,opt,name=correct_option,json=correctOption,proto3" json:"correct_option,omitempty"`
	SampleCode    string                 `protobuf:"bytes,6,opt,name=sample_code,json=sampleCode,proto3" json:"sample_code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Question) Reset() {
	*x = Question{}
	mi := &file_tests_tests_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Question) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Question) ProtoMessage() {}

func (x *Question) ProtoReflect() protoreflect.Message {
	mi := &file_tests_tests_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Question.ProtoReflect.Descriptor instead.
func (*Question) Descriptor() ([]byte, []int) {
	return file_tests_tests_proto_rawDescGZIP(), []int{3}
}

func (x *Question) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Question) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *Question) GetType() QuestionType {
	if x != nil {
		return x.Type
	}
	return QuestionType_QUESTION_TYPE_UNSPECIFIED
}

func (x *Question) GetOptions() []string {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *Question) GetCorrectOption() int32 {
	if x != nil {
		return x.CorrectOption
	}
	return 0
}

func (x *Question) GetSampleCode() string {
	if x != nil {
		return x.SampleCode
	}
	return ""
}

type CreateTestResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TestId        int64                  `protobuf:"varint,1,opt,name=test_id,json=testId,proto3" json:"test_id,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTestResponse) Reset() {
	*x = CreateTestResponse{}
	mi := &file_tests_tests_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTestResponse) ProtoMessage() {}

func (x *CreateTestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tests_tests_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTestResponse.ProtoReflect.Descriptor instead.
func (*CreateTestResponse) Descriptor() ([]byte, []int) {
	return file_tests_tests_proto_rawDescGZIP(), []int{4}
}

func (x *CreateTestResponse) GetTestId() int64 {
	if x != nil {
		return x.TestId
	}
	return 0
}

func (x *CreateTestResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetTestsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Direction     Direction              `protobuf:"varint,1,opt,name=direction,proto3,enum=test.v1.Direction" json:"direction,omitempty"`
	Level         Level                  `protobuf:"varint,2,opt,name=level,proto3,enum=test.v1.Level" json:"level,omitempty"`
	Difficulty    Difficulty             `protobuf:"varint,3,opt,name=difficulty,proto3,enum=test.v1.Difficulty" json:"difficulty,omitempty"`
	Pagination    *Pagination            `protobuf:"bytes,4,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTestsRequest) Reset() {
	*x = GetTestsRequest{}
	mi := &file_tests_tests_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTestsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTestsRequest) ProtoMessage() {}

func (x *GetTestsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tests_tests_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTestsRequest.ProtoReflect.Descriptor instead.
func (*GetTestsRequest) Descriptor() ([]byte, []int) {
	return file_tests_tests_proto_rawDescGZIP(), []int{5}
}

func (x *GetTestsRequest) GetDirection() Direction {
	if x != nil {
		return x.Direction
	}
	return Direction_DIRECTION_UNSPECIFIED
}

func (x *GetTestsRequest) GetLevel() Level {
	if x != nil {
		return x.Level
	}
	return Level_LEVEL_UNSPECIFIED
}

func (x *GetTestsRequest) GetDifficulty() Difficulty {
	if x != nil {
		return x.Difficulty
	}
	return Difficulty_DIFFICULTY_UNSPECIFIED
}

func (x *GetTestsRequest) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type GetTestsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tests         []*TestInfo            `protobuf:"bytes,1,rep,name=tests,proto3" json:"tests,omitempty"`
	NextPageToken string                 `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTestsResponse) Reset() {
	*x = GetTestsResponse{}
	mi := &file_tests_tests_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTestsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTestsResponse) ProtoMessage() {}

func (x *GetTestsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tests_tests_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTestsResponse.ProtoReflect.Descriptor instead.
func (*GetTestsResponse) Descriptor() ([]byte, []int) {
	return file_tests_tests_proto_rawDescGZIP(), []int{6}
}

func (x *GetTestsResponse) GetTests() []*TestInfo {
	if x != nil {
		return x.Tests
	}
	return nil
}

func (x *GetTestsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type Test struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Test) Reset() {
	*x = Test{}
	mi := &file_tests_tests_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Test) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Test) ProtoMessage() {}

func (x *Test) ProtoReflect() protoreflect.Message {
	mi := &file_tests_tests_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Test.ProtoReflect.Descriptor instead.
func (*Test) Descriptor() ([]byte, []int) {
	return file_tests_tests_proto_rawDescGZIP(), []int{7}
}

func (x *Test) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Test) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Test) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type GetTestRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TestId        int64                  `protobuf:"varint,1,opt,name=test_id,json=testId,proto3" json:"test_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTestRequest) Reset() {
	*x = GetTestRequest{}
	mi := &file_tests_tests_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTestRequest) ProtoMessage() {}

func (x *GetTestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tests_tests_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTestRequest.ProtoReflect.Descriptor instead.
func (*GetTestRequest) Descriptor() ([]byte, []int) {
	return file_tests_tests_proto_rawDescGZIP(), []int{8}
}

func (x *GetTestRequest) GetTestId() int64 {
	if x != nil {
		return x.TestId
	}
	return 0
}

type GetTestResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Test          *TestInfo              `protobuf:"bytes,1,opt,name=test,proto3" json:"test,omitempty"`
	Questions     []*Question            `protobuf:"bytes,2,rep,name=questions,proto3" json:"questions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTestResponse) Reset() {
	*x = GetTestResponse{}
	mi := &file_tests_tests_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTestResponse) ProtoMessage() {}

func (x *GetTestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tests_tests_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTestResponse.ProtoReflect.Descriptor instead.
func (*GetTestResponse) Descriptor() ([]byte, []int) {
	return file_tests_tests_proto_rawDescGZIP(), []int{9}
}

func (x *GetTestResponse) GetTest() *TestInfo {
	if x != nil {
		return x.Test
	}
	return nil
}

func (x *GetTestResponse) GetQuestions() []*Question {
	if x != nil {
		return x.Questions
	}
	return nil
}

type SubmitAnswersRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TestId        int64                  `protobuf:"varint,1,opt,name=test_id,json=testId,proto3" json:"test_id,omitempty"`
	UserId        int64                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Answers       []*Answer              `protobuf:"bytes,3,rep,name=answers,proto3" json:"answers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmitAnswersRequest) Reset() {
	*x = SubmitAnswersRequest{}
	mi := &file_tests_tests_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitAnswersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitAnswersRequest) ProtoMessage() {}

func (x *SubmitAnswersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tests_tests_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitAnswersRequest.ProtoReflect.Descriptor instead.
func (*SubmitAnswersRequest) Descriptor() ([]byte, []int) {
	return file_tests_tests_proto_rawDescGZIP(), []int{10}
}

func (x *SubmitAnswersRequest) GetTestId() int64 {
	if x != nil {
		return x.TestId
	}
	return 0
}

func (x *SubmitAnswersRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *SubmitAnswersRequest) GetAnswers() []*Answer {
	if x != nil {
		return x.Answers
	}
	return nil
}

type Answer struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	QuestionId     int64                  `protobuf:"varint,1,opt,name=question_id,json=questionId,proto3" json:"question_id,omitempty"`
	SelectedOption int32                  `protobuf:"varint,2,opt,name=selected_option,json=selectedOption,proto3" json:"selected_option,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Answer) Reset() {
	*x = Answer{}
	mi := &file_tests_tests_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Answer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Answer) ProtoMessage() {}

func (x *Answer) ProtoReflect() protoreflect.Message {
	mi := &file_tests_tests_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Answer.ProtoReflect.Descriptor instead.
func (*Answer) Descriptor() ([]byte, []int) {
	return file_tests_tests_proto_rawDescGZIP(), []int{11}
}

func (x *Answer) GetQuestionId() int64 {
	if x != nil {
		return x.QuestionId
	}
	return 0
}

func (x *Answer) GetSelectedOption() int32 {
	if x != nil {
		return x.SelectedOption
	}
	return 0
}

type SubmitAnswersResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SubmissionId  int64                  `protobuf:"varint,1,opt,name=submission_id,json=submissionId,proto3" json:"submission_id,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmitAnswersResponse) Reset() {
	*x = SubmitAnswersResponse{}
	mi := &file_tests_tests_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitAnswersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitAnswersResponse) ProtoMessage() {}

func (x *SubmitAnswersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tests_tests_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitAnswersResponse.ProtoReflect.Descriptor instead.
func (*SubmitAnswersResponse) Descriptor() ([]byte, []int) {
	return file_tests_tests_proto_rawDescGZIP(), []int{12}
}

func (x *SubmitAnswersResponse) GetSubmissionId() int64 {
	if x != nil {
		return x.SubmissionId
	}
	return 0
}

func (x *SubmitAnswersResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetTestResultsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SubmissionId  int64                  `protobuf:"varint,1,opt,name=submission_id,json=submissionId,proto3" json:"submission_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTestResultsRequest) Reset() {
	*x = GetTestResultsRequest{}
	mi := &file_tests_tests_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTestResultsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTestResultsRequest) ProtoMessage() {}

func (x *GetTestResultsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tests_tests_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTestResultsRequest.ProtoReflect.Descriptor instead.
func (*GetTestResultsRequest) Descriptor() ([]byte, []int) {
	return file_tests_tests_proto_rawDescGZIP(), []int{13}
}

func (x *GetTestResultsRequest) GetSubmissionId() int64 {
	if x != nil {
		return x.SubmissionId
	}
	return 0
}

type GetTestResultsResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Score          int32                  `protobuf:"varint,1,opt,name=score,proto3" json:"score,omitempty"`
	TotalQuestions int32                  `protobuf:"varint,2,opt,name=total_questions,json=totalQuestions,proto3" json:"total_questions,omitempty"`
	Feedback       string                 `protobuf:"bytes,3,opt,name=feedback,proto3" json:"feedback,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetTestResultsResponse) Reset() {
	*x = GetTestResultsResponse{}
	mi := &file_tests_tests_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTestResultsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTestResultsResponse) ProtoMessage() {}

func (x *GetTestResultsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tests_tests_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTestResultsResponse.ProtoReflect.Descriptor instead.
func (*GetTestResultsResponse) Descriptor() ([]byte, []int) {
	return file_tests_tests_proto_rawDescGZIP(), []int{14}
}

func (x *GetTestResultsResponse) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *GetTestResultsResponse) GetTotalQuestions() int32 {
	if x != nil {
		return x.TotalQuestions
	}
	return 0
}

func (x *GetTestResultsResponse) GetFeedback() string {
	if x != nil {
		return x.Feedback
	}
	return ""
}

type UpdateTestRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TestId        int64                  `protobuf:"varint,1,opt,name=test_id,json=testId,proto3" json:"test_id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Questions     []*Question            `protobuf:"bytes,4,rep,name=questions,proto3" json:"questions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTestRequest) Reset() {
	*x = UpdateTestRequest{}
	mi := &file_tests_tests_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTestRequest) ProtoMessage() {}

func (x *UpdateTestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tests_tests_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTestRequest.ProtoReflect.Descriptor instead.
func (*UpdateTestRequest) Descriptor() ([]byte, []int) {
	return file_tests_tests_proto_rawDescGZIP(), []int{15}
}

func (x *UpdateTestRequest) GetTestId() int64 {
	if x != nil {
		return x.TestId
	}
	return 0
}

func (x *UpdateTestRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateTestRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateTestRequest) GetQuestions() []*Question {
	if x != nil {
		return x.Questions
	}
	return nil
}

type UpdateTestResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTestResponse) Reset() {
	*x = UpdateTestResponse{}
	mi := &file_tests_tests_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTestResponse) ProtoMessage() {}

func (x *UpdateTestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tests_tests_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTestResponse.ProtoReflect.Descriptor instead.
func (*UpdateTestResponse) Descriptor() ([]byte, []int) {
	return file_tests_tests_proto_rawDescGZIP(), []int{16}
}

func (x *UpdateTestResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DeleteTestRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TestId        int64                  `protobuf:"varint,1,opt,name=test_id,json=testId,proto3" json:"test_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteTestRequest) Reset() {
	*x = DeleteTestRequest{}
	mi := &file_tests_tests_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteTestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTestRequest) ProtoMessage() {}

func (x *DeleteTestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tests_tests_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTestRequest.ProtoReflect.Descriptor instead.
func (*DeleteTestRequest) Descriptor() ([]byte, []int) {
	return file_tests_tests_proto_rawDescGZIP(), []int{17}
}

func (x *DeleteTestRequest) GetTestId() int64 {
	if x != nil {
		return x.TestId
	}
	return 0
}

type PublishTestRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TestId        int64                  `protobuf:"varint,1,opt,name=test_id,json=testId,proto3" json:"test_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PublishTestRequest) Reset() {
	*x = PublishTestRequest{}
	mi := &file_tests_tests_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublishTestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishTestRequest) ProtoMessage() {}

func (x *PublishTestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tests_tests_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishTestRequest.ProtoReflect.Descriptor instead.
func (*PublishTestRequest) Descriptor() ([]byte, []int) {
	return file_tests_tests_proto_rawDescGZIP(), []int{18}
}

func (x *PublishTestRequest) GetTestId() int64 {
	if x != nil {
		return x.TestId
	}
	return 0
}

type PublishTestResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PublishTestResponse) Reset() {
	*x = PublishTestResponse{}
	mi := &file_tests_tests_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublishTestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishTestResponse) ProtoMessage() {}

func (x *PublishTestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tests_tests_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishTestResponse.ProtoReflect.Descriptor instead.
func (*PublishTestResponse) Descriptor() ([]byte, []int) {
	return file_tests_tests_proto_rawDescGZIP(), []int{19}
}

func (x *PublishTestResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_tests_tests_proto protoreflect.FileDescriptor

const file_tests_tests_proto_rawDesc = "" +
	"\n" +
	"\x11tests/tests.proto\x12\atest.v1\"H\n" +
	"\n" +
	"Pagination\x12\x1b\n" +
	"\tpage_size\x18\x01 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x02 \x01(\tR\tpageToken\"\xdf\x01\n" +
	"\bTestInfo\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x120\n" +
	"\tdirection\x18\x04 \x01(\x0e2\x12.test.v1.DirectionR\tdirection\x12$\n" +
	"\x05level\x18\x05 \x01(\x0e2\x0e.test.v1.LevelR\x05level\x123\n" +
	"\n" +
	"difficulty\x18\x06 \x01(\x0e2\x13.test.v1.DifficultyR\n" +
	"difficulty\"\x89\x02\n" +
	"\x11CreateTestRequest\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12/\n" +
	"\tquestions\x18\x03 \x03(\v2\x11.test.v1.QuestionR\tquestions\x120\n" +
	"\tdirection\x18\x04 \x01(\x0e2\x12.test.v1.DirectionR\tdirection\x12$\n" +
	"\x05level\x18\x05 \x01(\x0e2\x0e.test.v1.LevelR\x05level\x123\n" +
	"\n" +
	"difficulty\x18\x06 \x01(\x0e2\x13.test.v1.DifficultyR\n" +
	"difficulty\"\xbb\x01\n" +
	"\bQuestion\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x12\n" +
	"\x04text\x18\x02 \x01(\tR\x04text\x12)\n" +
	"\x04type\x18\x03 \x01(\x0e2\x15.test.v1.QuestionTypeR\x04type\x12\x18\n" +
	"\aoptions\x18\x04 \x03(\tR\aoptions\x12%\n" +
	"\x0ecorrect_option\x18\x05 \x01(\x05R\rcorrectOption\x12\x1f\n" +
	"\vsample_code\x18\x06 \x01(\tR\n" +
	"sampleCode\"G\n" +
	"\x12CreateTestResponse\x12\x17\n" +
	"\atest_id\x18\x01 \x01(\x03R\x06testId\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\xd3\x01\n" +
	"\x0fGetTestsRequest\x120\n" +
	"\tdirection\x18\x01 \x01(\x0e2\x12.test.v1.DirectionR\tdirection\x12$\n" +
	"\x05level\x18\x02 \x01(\x0e2\x0e.test.v1.LevelR\x05level\x123\n" +
	"\n" +
	"difficulty\x18\x03 \x01(\x0e2\x13.test.v1.DifficultyR\n" +
	"difficulty\x123\n" +
	"\n" +
	"pagination\x18\x04 \x01(\v2\x13.test.v1.PaginationR\n" +
	"pagination\"c\n" +
	"\x10GetTestsResponse\x12'\n" +
	"\x05tests\x18\x01 \x03(\v2\x11.test.v1.TestInfoR\x05tests\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\"N\n" +
	"\x04Test\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\")\n" +
	"\x0eGetTestRequest\x12\x17\n" +
	"\atest_id\x18\x01 \x01(\x03R\x06testId\"i\n" +
	"\x0fGetTestResponse\x12%\n" +
	"\x04test\x18\x01 \x01(\v2\x11.test.v1.TestInfoR\x04test\x12/\n" +
	"\tquestions\x18\x02 \x03(\v2\x11.test.v1.QuestionR\tquestions\"s\n" +
	"\x14SubmitAnswersRequest\x12\x17\n" +
	"\atest_id\x18\x01 \x01(\x03R\x06testId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\x03R\x06userId\x12)\n" +
	"\aanswers\x18\x03 \x03(\v2\x0f.test.v1.AnswerR\aanswers\"R\n" +
	"\x06Answer\x12\x1f\n" +
	"\vquestion_id\x18\x01 \x01(\x03R\n" +
	"questionId\x12'\n" +
	"\x0fselected_option\x18\x02 \x01(\x05R\x0eselectedOption\"V\n" +
	"\x15SubmitAnswersResponse\x12#\n" +
	"\rsubmission_id\x18\x01 \x01(\x03R\fsubmissionId\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"<\n" +
	"\x15GetTestResultsRequest\x12#\n" +
	"\rsubmission_id\x18\x01 \x01(\x03R\fsubmissionId\"s\n" +
	"\x16GetTestResultsResponse\x12\x14\n" +
	"\x05score\x18\x01 \x01(\x05R\x05score\x12'\n" +
	"\x0ftotal_questions\x18\x02 \x01(\x05R\x0etotalQuestions\x12\x1a\n" +
	"\bfeedback\x18\x03 \x01(\tR\bfeedback\"\x95\x01\n" +
	"\x11UpdateTestRequest\x12\x17\n" +
	"\atest_id\x18\x01 \x01(\x03R\x06testId\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12/\n" +
	"\tquestions\x18\x04 \x03(\v2\x11.test.v1.QuestionR\tquestions\".\n" +
	"\x12UpdateTestResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\",\n" +
	"\x11DeleteTestRequest\x12\x17\n" +
	"\atest_id\x18\x01 \x01(\x03R\x06testId\"-\n" +
	"\x12PublishTestRequest\x12\x17\n" +
	"\atest_id\x18\x01 \x01(\x03R\x06testId\"/\n" +
	"\x13PublishTestResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage*_\n" +
	"\tDirection\x12\x19\n" +
	"\x15DIRECTION_UNSPECIFIED\x10\x00\x12\v\n" +
	"\aBACKEND\x10\x01\x12\f\n" +
	"\bFRONTEND\x10\x02\x12\n" +
	"\n" +
	"\x06DEVOPS\x10\x03\x12\x10\n" +
	"\fDATA_SCIENCE\x10\x04*B\n" +
	"\x05Level\x12\x15\n" +
	"\x11LEVEL_UNSPECIFIED\x10\x00\x12\n" +
	"\n" +
	"\x06JUNIOR\x10\x01\x12\n" +
	"\n" +
	"\x06MIDDLE\x10\x02\x12\n" +
	"\n" +
	"\x06SENIOR\x10\x03*J\n" +
	"\fQuestionType\x12\x1d\n" +
	"\x19QUESTION_TYPE_UNSPECIFIED\x10\x00\x12\a\n" +
	"\x03MCQ\x10\x01\x12\b\n" +
	"\x04TEXT\x10\x02\x12\b\n" +
	"\x04CODE\x10\x03*H\n" +
	"\n" +
	"Difficulty\x12\x1a\n" +
	"\x16DIFFICULTY_UNSPECIFIED\x10\x00\x12\b\n" +
	"\x04EASY\x10\x01\x12\n" +
	"\n" +
	"\x06MEDIUM\x10\x02\x12\b\n" +
	"\x04HARD\x10\x032\xc6\x04\n" +
	"\vTestService\x12E\n" +
	"\n" +
	"CreateTest\x12\x1a.test.v1.CreateTestRequest\x1a\x1b.test.v1.CreateTestResponse\x12?\n" +
	"\bGetTests\x12\x18.test.v1.GetTestsRequest\x1a\x19.test.v1.GetTestsResponse\x12<\n" +
	"\aGetTest\x12\x17.test.v1.GetTestRequest\x1a\x18.test.v1.GetTestResponse\x12N\n" +
	"\rSubmitAnswers\x12\x1d.test.v1.SubmitAnswersRequest\x1a\x1e.test.v1.SubmitAnswersResponse\x12Q\n" +
	"\x0eGetTestResults\x12\x1e.test.v1.GetTestResultsRequest\x1a\x1f.test.v1.GetTestResultsResponse\x12E\n" +
	"\n" +
	"UpdateTest\x12\x1a.test.v1.UpdateTestRequest\x1a\x1b.test.v1.UpdateTestResponse\x12=\n" +
	"\n" +
	"DeleteTest\x12\x1a.test.v1.DeleteTestRequest\x1a\x13.test.v1.Pagination\x12H\n" +
	"\vPublishTest\x12\x1b.test.v1.PublishTestRequest\x1a\x1c.test.v1.PublishTestResponseB\x1aZ\x18diploma.tests.v1;testsv1b\x06proto3"

var (
	file_tests_tests_proto_rawDescOnce sync.Once
	file_tests_tests_proto_rawDescData []byte
)

func file_tests_tests_proto_rawDescGZIP() []byte {
	file_tests_tests_proto_rawDescOnce.Do(func() {
		file_tests_tests_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_tests_tests_proto_rawDesc), len(file_tests_tests_proto_rawDesc)))
	})
	return file_tests_tests_proto_rawDescData
}

var file_tests_tests_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_tests_tests_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_tests_tests_proto_goTypes = []any{
	(Direction)(0),                 // 0: test.v1.Direction
	(Level)(0),                     // 1: test.v1.Level
	(QuestionType)(0),              // 2: test.v1.QuestionType
	(Difficulty)(0),                // 3: test.v1.Difficulty
	(*Pagination)(nil),             // 4: test.v1.Pagination
	(*TestInfo)(nil),               // 5: test.v1.TestInfo
	(*CreateTestRequest)(nil),      // 6: test.v1.CreateTestRequest
	(*Question)(nil),               // 7: test.v1.Question
	(*CreateTestResponse)(nil),     // 8: test.v1.CreateTestResponse
	(*GetTestsRequest)(nil),        // 9: test.v1.GetTestsRequest
	(*GetTestsResponse)(nil),       // 10: test.v1.GetTestsResponse
	(*Test)(nil),                   // 11: test.v1.Test
	(*GetTestRequest)(nil),         // 12: test.v1.GetTestRequest
	(*GetTestResponse)(nil),        // 13: test.v1.GetTestResponse
	(*SubmitAnswersRequest)(nil),   // 14: test.v1.SubmitAnswersRequest
	(*Answer)(nil),                 // 15: test.v1.Answer
	(*SubmitAnswersResponse)(nil),  // 16: test.v1.SubmitAnswersResponse
	(*GetTestResultsRequest)(nil),  // 17: test.v1.GetTestResultsRequest
	(*GetTestResultsResponse)(nil), // 18: test.v1.GetTestResultsResponse
	(*UpdateTestRequest)(nil),      // 19: test.v1.UpdateTestRequest
	(*UpdateTestResponse)(nil),     // 20: test.v1.UpdateTestResponse
	(*DeleteTestRequest)(nil),      // 21: test.v1.DeleteTestRequest
	(*PublishTestRequest)(nil),     // 22: test.v1.PublishTestRequest
	(*PublishTestResponse)(nil),    // 23: test.v1.PublishTestResponse
}
var file_tests_tests_proto_depIdxs = []int32{
	0,  // 0: test.v1.TestInfo.direction:type_name -> test.v1.Direction
	1,  // 1: test.v1.TestInfo.level:type_name -> test.v1.Level
	3,  // 2: test.v1.TestInfo.difficulty:type_name -> test.v1.Difficulty
	7,  // 3: test.v1.CreateTestRequest.questions:type_name -> test.v1.Question
	0,  // 4: test.v1.CreateTestRequest.direction:type_name -> test.v1.Direction
	1,  // 5: test.v1.CreateTestRequest.level:type_name -> test.v1.Level
	3,  // 6: test.v1.CreateTestRequest.difficulty:type_name -> test.v1.Difficulty
	2,  // 7: test.v1.Question.type:type_name -> test.v1.QuestionType
	0,  // 8: test.v1.GetTestsRequest.direction:type_name -> test.v1.Direction
	1,  // 9: test.v1.GetTestsRequest.level:type_name -> test.v1.Level
	3,  // 10: test.v1.GetTestsRequest.difficulty:type_name -> test.v1.Difficulty
	4,  // 11: test.v1.GetTestsRequest.pagination:type_name -> test.v1.Pagination
	5,  // 12: test.v1.GetTestsResponse.tests:type_name -> test.v1.TestInfo
	5,  // 13: test.v1.GetTestResponse.test:type_name -> test.v1.TestInfo
	7,  // 14: test.v1.GetTestResponse.questions:type_name -> test.v1.Question
	15, // 15: test.v1.SubmitAnswersRequest.answers:type_name -> test.v1.Answer
	7,  // 16: test.v1.UpdateTestRequest.questions:type_name -> test.v1.Question
	6,  // 17: test.v1.TestService.CreateTest:input_type -> test.v1.CreateTestRequest
	9,  // 18: test.v1.TestService.GetTests:input_type -> test.v1.GetTestsRequest
	12, // 19: test.v1.TestService.GetTest:input_type -> test.v1.GetTestRequest
	14, // 20: test.v1.TestService.SubmitAnswers:input_type -> test.v1.SubmitAnswersRequest
	17, // 21: test.v1.TestService.GetTestResults:input_type -> test.v1.GetTestResultsRequest
	19, // 22: test.v1.TestService.UpdateTest:input_type -> test.v1.UpdateTestRequest
	21, // 23: test.v1.TestService.DeleteTest:input_type -> test.v1.DeleteTestRequest
	22, // 24: test.v1.TestService.PublishTest:input_type -> test.v1.PublishTestRequest
	8,  // 25: test.v1.TestService.CreateTest:output_type -> test.v1.CreateTestResponse
	10, // 26: test.v1.TestService.GetTests:output_type -> test.v1.GetTestsResponse
	13, // 27: test.v1.TestService.GetTest:output_type -> test.v1.GetTestResponse
	16, // 28: test.v1.TestService.SubmitAnswers:output_type -> test.v1.SubmitAnswersResponse
	18, // 29: test.v1.TestService.GetTestResults:output_type -> test.v1.GetTestResultsResponse
	20, // 30: test.v1.TestService.UpdateTest:output_type -> test.v1.UpdateTestResponse
	4,  // 31: test.v1.TestService.DeleteTest:output_type -> test.v1.Pagination
	23, // 32: test.v1.TestService.PublishTest:output_type -> test.v1.PublishTestResponse
	25, // [25:33] is the sub-list for method output_type
	17, // [17:25] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_tests_tests_proto_init() }
func file_tests_tests_proto_init() {
	if File_tests_tests_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_tests_tests_proto_rawDesc), len(file_tests_tests_proto_rawDesc)),
			NumEnums:      4,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_tests_tests_proto_goTypes,
		DependencyIndexes: file_tests_tests_proto_depIdxs,
		EnumInfos:         file_tests_tests_proto_enumTypes,
		MessageInfos:      file_tests_tests_proto_msgTypes,
	}.Build()
	File_tests_tests_proto = out.File
	file_tests_tests_proto_goTypes = nil
	file_tests_tests_proto_depIdxs = nil
}
